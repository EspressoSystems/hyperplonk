var searchIndex = new Map(JSON.parse('[["arithmetic",{"t":"GFPPPFFNNNNNNNONHNNNNNNNNHHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNHHOHHHNONNNNNNNNNNNNHHHHNHHNNNNNNNNNNNNOHNNNNONONONNNHHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ArithErrors","DenseMultilinearExtension","InvalidParameters","SerializationErrors","ShouldNotArrive","VPAuxInfo","VirtualPolynomial","add","","","add_assign","","","add_mle_list","aux_info","batch_check","bit_decompose","borrow","","","","borrow_mut","","","","build_eq_x_r","build_eq_x_r_vec","build_f_hat","build_l","check","clone","","","clone_into","","","clone_to_uninit","","","default","","","deref","","","","deref_mut","","","","deserialize_with_mode","drop","","","","eq","","","eq_eval","equivalent","","","","evaluate","","evaluate_no_par","evaluate_opt","evaluations","fix_last_variables","fix_last_variables_no_par","fix_variables","","flattened_ml_extensions","fmt","","","","","from","","","","","from_evaluations_slice","from_evaluations_vec","gen_eval_point","get_batched_nv","get_index","get_uni_domain","hash","identity_permutation","identity_permutation_mles","index","init","","","","into","","","","is_zero","iter","iter_mut","max_degree","merge_polynomials","mul_by_mle","neg","new","new_from_mle","num_variables","num_vars","","print_evals","products","rand","","rand_zero","random_mle_list","random_permutation","random_permutation_mles","random_zero_mle_list","relabel","relabel_in_place","serialize_with_mode","","serialized_size","","sub","","sub_assign","","to_evaluations","to_owned","","","to_string","try_from","","","","try_into","","","","type_id","","","","vzip","","","","zero"],"q":[[0,"arithmetic"],[154,"arithmetic::virtual_polynomial"],[155,"ark_ff::fields::prime"],[156,"ark_poly::evaluations::multivariate::multilinear::dense"],[157,"ark_ff::fields"],[158,"arithmetic::errors"],[159,"core::result"],[160,"alloc::sync"],[161,"core::iter::traits::collect"],[162,"ark_serialize::error"],[163,"core::iter::traits::iterator"],[164,"core::marker"],[165,"alloc::vec"],[166,"ark_poly::domain::radix2"],[167,"ark_poly::polynomial::univariate::dense"],[168,"core::clone"],[169,"core::default"],[170,"ark_serialize"],[171,"std::io"],[172,"core::cmp"],[173,"core::option"],[174,"core::fmt"],[175,"core::hash"],[176,"core::slice::iter"],[177,"rand_core"],[178,"rand::rng"],[179,"alloc::string"],[180,"core::any"],[181,"arithmetic::util"],[182,"arithmetic::univariate_polynomial"],[183,"arithmetic::multilinear_polynomial"]],"i":"``Ab00``bh0000110`21Cb13201``2`12012012012013201320113201201`001121``1```12332013320111````1``1320132011110`212201122212````11010111111201332013201320132011","f":"```````{{{d{{b{c}}}}{d{{b{c}}}}}ef{}}{{{h{c}}{h{c}}}{{h{c}}}j}{{{d{{h{c}}}}{d{{h{c}}}}}{}j}{{{d{l{h{c}}}}{d{{h{c}}}}}nj}{{{d{l{h{c}}}}{h{c}}}nj}{{{d{l{h{c}}}}{A`{c{d{{h{c}}}}}}}nj}{{{d{l{b{c}}}}ec}{{Ad{nAb}}}f{{Aj{}{{Af{{Ah{{h{c}}}}}}}}}}`{e{{Ad{nAl}}}j{{An{}{{Af{{d{{h{c}}}}}}}}B`}}{{BbBd}{{Bh{Bf}}}}{d{{d{c}}}{}}000{{{d{l}}}{{d{lc}}}{}}000{{{d{{Bj{c}}}}}{{Ad{{Ah{{h{c}}}}Ab}}}f}{{{d{{Bj{c}}}}}{{Ad{{Bh{c}}Ab}}}f}{{{d{{b{c}}}}{d{{Bj{c}}}}}{{Ad{{b{c}}Ab}}}f}{{{d{{Bj{{Bh{c}}}}}}{d{{Bl{c}}}}Bf}{{Ad{{Bh{{Bn{c}}}}Ab}}}f}{{{d{{h{c}}}}}{{Ad{nAl}}}j}{{{d{{b{c}}}}}{{b{c}}}{C`f}}{{{d{{Cb{c}}}}}{{Cb{c}}}{C`f}}{{{d{{h{c}}}}}{{h{c}}}{C`j}}{{d{d{lc}}}n{}}00{{dCd}n}00{{}{{b{c}}}{Cff}}{{}{{Cb{c}}}{Cff}}{{}{{h{c}}}{Cfj}}{Bd{{d{c}}}{}}000{Bd{{d{lc}}}{}}000{{cChCj}{{Ad{{h{e}}Al}}}Clj}{Bdn}000{{{d{{b{c}}}}{d{{b{c}}}}}Bf{Cnf}}{{{d{{Cb{c}}}}{d{{Cb{c}}}}}Bf{Cnf}}{{{d{{h{c}}}}{d{{h{c}}}}}Bf{Cnj}}{{{d{{Bj{c}}}}{d{{Bj{c}}}}}{{Ad{cAb}}}f}{{d{d{c}}}Bf{}}000{{{d{{b{c}}}}{d{{Bj{c}}}}}{{Ad{cAb}}}f}{{{d{{h{c}}}}{d{{Bj{c}}}}}{{D`{c}}}j}{{{d{{h{c}}}}{d{{Bj{c}}}}}cj}0`{{{d{{h{c}}}}{d{{Bj{c}}}}}{{h{c}}}f}0{{{d{{h{c}}}}{d{{Bj{c}}}}}{{h{c}}}j}0`{{{d{Ab}}{d{lDb}}}Dd}0{{{d{{b{c}}}}{d{lDb}}}Dd{Dff}}{{{d{{Cb{c}}}}{d{lDb}}}Dd{Dff}}{{{d{{h{c}}}}{d{lDb}}}{{Ad{nDh}}}j}{AlAb}{cc{}}000{{Bd{d{{Bj{c}}}}}{{h{c}}}j}{{Bd{Bh{c}}}{{h{c}}}j}{{BdBd{d{{Bj{c}}}}}{{Bh{c}}}f}{{BdBd}Bd}{{BdBd}{{A`{BdBdBf}}}}{Bd{{Ad{{Bl{c}}Ab}}}f}{{{d{{h{c}}}}{d{le}}}n{Djj}Dl}{{BdBd}{{Bh{c}}}f}{{BdBd}{{Bh{{Ah{{h{c}}}}}}}f}{{{d{{h{c}}}}Bd}dj}{{}Bd}000{{}c{}}000{{{d{{h{c}}}}}Bfj}{{{d{{h{c}}}}}{{Dn{c}}}j}{{{d{l{h{c}}}}}{{E`{c}}}j}`{{{d{{Bj{{Ah{{h{c}}}}}}}}}{{Ad{{Ah{{h{c}}}}Ab}}}f}{{{d{l{b{c}}}}{Ah{{h{c}}}}c}{{Ad{nAb}}}f}{{{h{c}}}{}j}{Bd{{b{c}}}f}{{{d{{Ah{{h{c}}}}}}c}{{b{c}}}f}`{{{d{{h{c}}}}}Bdj}`{{{d{{b{c}}}}}nf}`{{Bd{A`{BdBd}}Bd{d{lc}}}{{Ad{{A`{{b{e}}e}}Ab}}}Ebf}{{Bd{d{lc}}}{{h{e}}}Edj}{{Bd{A`{BdBd}}Bd{d{lc}}}{{Ad{{b{e}}Ab}}}Ebf}{{BdBd{d{lc}}}{{A`{{Bh{{Ah{{h{e}}}}}}e}}}Ebf}{{BdBd{d{lc}}}{{Bh{e}}}Ebf}{{BdBd{d{lc}}}{{Bh{{Ah{{h{e}}}}}}}Ebf}0{{{d{{h{c}}}}BdBdBd}{{h{c}}}j}{{{d{l{h{c}}}}BdBdBd}nj}{{{d{{Cb{c}}}}eCh}{{Ad{nAl}}}fEf}{{{d{{h{c}}}}eCh}{{Ad{nAl}}}jEf}{{{d{{Cb{c}}}}Ch}Bdf}{{{d{{h{c}}}}Ch}Bdj}{{{h{c}}{h{c}}}{{h{c}}}j}{{{d{{h{c}}}}{d{{h{c}}}}}{}j}{{{d{l{h{c}}}}{d{{h{c}}}}}nj}{{{d{l{h{c}}}}{h{c}}}nj}{{{d{{h{c}}}}}{{Bh{c}}}j}{dc{}}00{dEh}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dEj}000{{}c{}}000{{}{{h{c}}}j}","D":"F`","p":[[5,"VirtualPolynomial",0,154],[1,"reference",null,null,1],[10,"PrimeField",155],[5,"DenseMultilinearExtension",0,156],[10,"Field",157],[0,"mut"],[1,"unit"],[1,"tuple",null,null,1],[6,"ArithErrors",0,158],[6,"Result",159,null,1],[17,"Item"],[5,"Arc",160,null,1],[10,"IntoIterator",161],[6,"SerializationError",162],[10,"Iterator",163],[10,"Send",164],[1,"u64"],[1,"usize"],[1,"bool"],[5,"Vec",165],[1,"slice"],[5,"Radix2EvaluationDomain",166],[5,"DensePolynomial",167],[10,"Clone",168],[5,"VPAuxInfo",0,154],[1,"u8"],[10,"Default",169],[6,"Compress",170],[6,"Validate",170],[10,"Read",171],[10,"PartialEq",172],[6,"Option",173,null,1],[5,"Formatter",174],[8,"Result",174],[10,"Debug",174],[5,"Error",174],[10,"Hash",175],[10,"Hasher",175],[5,"Iter",176],[5,"IterMut",176],[10,"RngCore",177],[10,"Rng",178],[10,"Write",171],[5,"String",179],[5,"TypeId",180]],"r":[[0,158],[1,156],[2,158],[3,158],[4,158],[5,154],[6,154],[7,154],[8,156],[9,156],[10,156],[11,156],[12,156],[13,154],[14,154],[15,156],[16,181],[17,158],[18,154],[19,154],[20,156],[21,158],[22,154],[23,154],[24,156],[25,154],[26,154],[27,154],[28,182],[29,156],[30,154],[31,154],[32,156],[33,154],[34,154],[35,156],[36,154],[37,154],[38,156],[39,154],[40,154],[41,156],[42,158],[43,154],[44,154],[45,156],[46,158],[47,154],[48,154],[49,156],[50,156],[51,158],[52,154],[53,154],[54,156],[55,154],[56,154],[57,156],[58,154],[59,154],[60,154],[61,156],[62,156],[63,154],[64,156],[65,183],[66,183],[67,156],[68,183],[69,183],[70,183],[71,156],[72,154],[73,158],[74,158],[75,154],[76,154],[77,156],[78,158],[79,158],[80,154],[81,154],[82,156],[83,156],[84,156],[85,181],[86,181],[87,181],[88,182],[89,156],[90,183],[91,183],[92,156],[93,158],[94,154],[95,154],[96,156],[97,158],[98,154],[99,154],[100,156],[101,156],[102,156],[103,156],[104,154],[105,183],[106,154],[107,156],[108,154],[109,154],[110,154],[111,156],[112,156],[113,154],[114,154],[115,154],[116,156],[117,154],[118,183],[119,183],[120,183],[121,183],[122,156],[123,156],[124,154],[125,156],[126,154],[127,156],[128,156],[129,156],[130,156],[131,156],[132,156],[133,154],[134,154],[135,156],[136,158],[137,158],[138,154],[139,154],[140,156],[141,158],[142,154],[143,154],[144,156],[145,158],[146,154],[147,154],[148,156],[149,158],[150,154],[151,154],[152,156],[153,156]],"b":[[8,"impl-Add-for-DenseMultilinearExtension%3CF%3E"],[9,"impl-Add%3C%26DenseMultilinearExtension%3CF%3E%3E-for-%26DenseMultilinearExtension%3CF%3E"],[10,"impl-AddAssign%3C%26DenseMultilinearExtension%3CF%3E%3E-for-DenseMultilinearExtension%3CF%3E"],[11,"impl-AddAssign-for-DenseMultilinearExtension%3CF%3E"],[12,"impl-AddAssign%3C(F,+%26DenseMultilinearExtension%3CF%3E)%3E-for-DenseMultilinearExtension%3CF%3E"],[73,"impl-Display-for-ArithErrors"],[74,"impl-Debug-for-ArithErrors"],[128,"impl-Sub-for-DenseMultilinearExtension%3CF%3E"],[129,"impl-Sub%3C%26DenseMultilinearExtension%3CF%3E%3E-for-%26DenseMultilinearExtension%3CF%3E"],[130,"impl-SubAssign%3C%26DenseMultilinearExtension%3CF%3E%3E-for-DenseMultilinearExtension%3CF%3E"],[131,"impl-SubAssign-for-DenseMultilinearExtension%3CF%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGoAFAAAAAAACAAFABAAAAASAAcAHAAAAB4AHAA8AAMAQQACAEUAAwBKAAUAWAAAAFoAAQBeAAMAZgAAAGwAAABwAAAAdQAAAHgAAAB6AAEAfQAdAA==","P":[[7,"F,Add::Output"],[8,"F"],[13,"F,"],[16,""],[17,"T"],[25,"F"],[33,"T"],[36,""],[39,"F"],[42,"T"],[50,"R,F"],[51,""],[55,"F"],[59,"K"],[63,"F"],[73,""],[75,"F"],[78,""],[79,"T"],[83,"F"],[86,""],[88,"F"],[89,"F,__H"],[90,"F"],[93,""],[97,"U"],[101,"F"],[115,"R,F"],[122,"F"],[124,"F,W"],[126,"F"],[133,"T"],[136,""],[137,"U,T"],[141,"U"],[145,""],[149,"V"],[153,"F"]]}],["hyperplonk",{"t":"KRRRRQCMMMPFGEPPPPFPPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNO","n":["HyperPlonkSNARK","Index","Proof","ProvingKey","VerifyingKey","build_mle","prelude","preprocess","prove","verify","ArithmeticErrors","CustomizedGates","HyperPlonkErrors","HyperPlonkSNARK","InvalidParameters","InvalidProof","InvalidProver","InvalidVerifier","MockCircuit","PCSErrors","PolyIOPErrors","SelectorColumn","SerializationError","TranscriptError","WitnessColumn","append","","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","coeff_ref","default","","","degree","deref","","","","","deref_mut","","","","","drop","","","","","eq","","equivalent","","","","fmt","","","","","from","","","","","","","","","","from_selector_rows","from_witness_rows","get_nv","","index","init","","","","","into","","","","","is_satisfied","jellyfish_turbo_plonk_gate","mock_gate","new","num_selector_columns","","num_variables","num_witness_columns","","public_inputs","super_long_selector_gate","to_owned","","","to_string","try_from","","","","","try_into","","","","","type_id","","","","","vanilla_plonk_gate","vzip","","","","","witnesses"],"q":[[0,"hyperplonk"],[10,"hyperplonk::prelude"],[139,"hyperplonk::errors"],[140,"core::result"],[141,"hyperplonk::witness"],[142,"hyperplonk::selectors"],[143,"ark_ff::fields::prime"],[144,"hyperplonk::custom_gate"],[145,"core::clone"],[146,"core::default"],[147,"core::cmp"],[148,"core::fmt"],[149,"arithmetic::errors"],[150,"transcript::errors"],[151,"subroutines::pcs::errors"],[152,"subroutines::poly_iop::errors"],[153,"ark_serialize::error"],[154,"alloc::vec"],[155,"hyperplonk::mock"],[156,"alloc::string"],[157,"core::any"]],"i":"`Cl000``000f```0000`00`00`AblCfAh43210432032032032203201043210432104320300330443210444444323232110432104321001101101003241043210432104320104321","f":"```````{{{b{c}}b}{{h{{d{eg}}f}}}{}{}{}}{{{b{c}}{b{j}}{b{{j{l}}}}}{{h{ef}}}{}{}}{{{b{c}}{b{j}}{b{e}}}{{h{nf}}}{}{}}```````````````{{{b{A`{Ab{c}}}}c}AdAf}{{{b{A`{l{c}}}}c}AdAf}{b{{b{c}}}{}}0000{{{b{A`}}}{{b{A`c}}}{}}0000{{{b{Ah}}}Ah}{{{b{{Ab{c}}}}}{{Ab{c}}}{AjAf}}{{{b{{l{c}}}}}{{l{c}}}{AjAf}}{{b{b{A`c}}}Ad{}}00{{bAl}Ad}00{{{b{{l{c}}}}}{{b{{j{c}}}}}Af}{{}Ah}{{}{{Ab{c}}}{AnAf}}{{}{{l{c}}}{AnAf}}{{{b{Ah}}}B`}{B`{{b{c}}}{}}0000{B`{{b{A`c}}}{}}0000{B`Ad}0000{{{b{Ah}}{b{Ah}}}n}{{{b{{Ab{c}}}}{b{{Ab{c}}}}}n{BbAf}}{{b{b{c}}}n{}}000{{{b{Ah}}{b{A`Bd}}}Bf}{{{b{f}}{b{A`Bd}}}Bf}0{{{b{{Ab{c}}}}{b{A`Bd}}}Bf{BhAf}}{{{b{{l{c}}}}{b{A`Bd}}}Bf{BhAf}}{cc{}}0{Bjf}{Blf}{Bnf}{C`f}{Cbf}555{{{b{{j{{`{c}}}}}}}{{h{{Cd{{Ab{c}}}}f}}}Af}{{{b{{j{{`{c}}}}}}}{{h{{Cd{{l{c}}}}f}}}Af}{{{b{{Ab{c}}}}}B`Af}{{{b{{l{c}}}}}B`Af}`{{}B`}0000{{}c{}}0000{{{b{{Cf{c}}}}}nAf}{{}Ah}{{B`B`}Ah}{{B`{b{Ah}}}{{Cf{c}}}Af}{{{b{{Cf{c}}}}}B`Af}{{{b{Ah}}}B`}110`4{bc{}}00{bCh}{c{{h{e}}}{}{}}0000{{}{{h{c}}}{}}0000{bCj}00009{{}c{}}0000`","D":"El","p":[[1,"reference",null,null,1],[1,"tuple",null,null,1],[6,"HyperPlonkErrors",10,139],[6,"Result",140,null,1],[1,"slice"],[5,"WitnessColumn",10,141],[1,"bool"],[0,"mut"],[5,"SelectorColumn",10,142],[1,"unit"],[10,"PrimeField",143],[5,"CustomizedGates",10,144],[10,"Clone",145],[1,"u8"],[10,"Default",146],[1,"usize"],[10,"PartialEq",147],[5,"Formatter",148],[8,"Result",148],[10,"Debug",148],[6,"ArithErrors",149],[6,"TranscriptError",150],[6,"PCSError",151],[6,"PolyIOPErrors",152],[6,"SerializationError",153],[5,"Vec",154],[5,"MockCircuit",10,155],[5,"String",156],[5,"TypeId",157],[10,"HyperPlonkSNARK",0]],"r":[[10,139],[11,144],[12,139],[13,0],[14,139],[15,139],[16,139],[17,139],[18,155],[19,139],[20,139],[21,142],[22,139],[23,139],[24,141],[25,142],[26,141],[27,155],[28,144],[29,139],[30,142],[31,141],[32,155],[33,144],[34,139],[35,142],[36,141],[37,144],[38,142],[39,141],[40,144],[41,142],[42,141],[43,144],[44,142],[45,141],[46,141],[47,144],[48,142],[49,141],[50,144],[51,155],[52,144],[53,139],[54,142],[55,141],[56,155],[57,144],[58,139],[59,142],[60,141],[61,155],[62,144],[63,139],[64,142],[65,141],[66,144],[67,142],[68,144],[69,144],[70,142],[71,142],[72,144],[73,139],[74,139],[75,142],[76,141],[77,155],[78,144],[79,139],[80,139],[81,139],[82,139],[83,139],[84,139],[85,142],[86,141],[87,142],[88,141],[89,142],[90,141],[91,155],[92,155],[93,144],[94,139],[95,142],[96,141],[97,155],[98,144],[99,139],[100,142],[101,141],[102,155],[103,144],[104,144],[105,155],[106,155],[107,144],[108,155],[109,155],[110,144],[111,155],[112,144],[113,144],[114,142],[115,141],[116,139],[117,155],[118,144],[119,139],[120,142],[121,141],[122,155],[123,144],[124,139],[125,142],[126,141],[127,155],[128,144],[129,139],[130,142],[131,141],[132,144],[133,155],[134,144],[135,139],[136,142],[137,141],[138,155]],"b":[[73,"impl-Display-for-HyperPlonkErrors"],[74,"impl-Debug-for-HyperPlonkErrors"],[79,"impl-From%3CArithErrors%3E-for-HyperPlonkErrors"],[80,"impl-From%3CTranscriptError%3E-for-HyperPlonkErrors"],[81,"impl-From%3CPCSError%3E-for-HyperPlonkErrors"],[82,"impl-From%3CPolyIOPErrors%3E-for-HyperPlonkErrors"],[83,"impl-From%3CSerializationError%3E-for-HyperPlonkErrors"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF0ADAACAAMABwAAAA4AAAATAAAAHAAWADQAGQBQAAQAXAAFAGcAAABwAAAAcgASAIYABQA=","P":[[7,"HyperPlonkSNARK::Index,HyperPlonkSNARK::ProvingKey,HyperPlonkSNARK::VerifyingKey"],[8,"HyperPlonkSNARK::ProvingKey,HyperPlonkSNARK::Proof"],[9,"HyperPlonkSNARK::VerifyingKey,HyperPlonkSNARK::Proof"],[25,"F"],[27,"T"],[37,""],[38,"F"],[40,"T"],[43,""],[46,"F"],[47,""],[48,"F"],[50,""],[51,"T"],[61,""],[67,"F"],[68,"K"],[72,""],[75,"F"],[77,"T"],[79,""],[84,"T"],[87,"F"],[92,""],[97,"U"],[102,"F"],[103,""],[105,"F"],[107,""],[108,"F"],[110,""],[113,"T"],[116,""],[117,"U,T"],[122,"U"],[127,""],[133,"V"]]}],["subroutines",{"t":"CCQRRRRRKRRRRKRRNMMMMMNMCMMMPFFPPPPFFFFFGEPEPIFFFFFNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNPFPPPPPRPKRREGKRRPPKRRRPRRKRRNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNOOMMMMQNNNNNNNNMMMMNN","n":["pcs","poly_iop","to_bytes","BatchProof","Commitment","Evaluation","Point","Polynomial","PolynomialCommitmentScheme","Proof","ProverParam","","SRS","StructuredReferenceString","VerifierParam","","batch_verify","commit","extract_prover_param","extract_verifier_param","gen_srs_for_testing","","multi_open","open","prelude","trim","","verify","ArithErrors","BatchProof","Commitment","InvalidParameters","InvalidProof","InvalidProver","InvalidVerifier","MultilinearKzgPCS","MultilinearKzgProof","MultilinearProverParam","MultilinearUniversalParams","MultilinearVerifierParam","PCSError","PolynomialCommitmentScheme","SerializationError","StructuredReferenceString","TranscriptError","UnivariateKzgBatchProof","UnivariateKzgPCS","UnivariateKzgProof","UnivariateProverParam","UnivariateUniversalParams","UnivariateVerifierParam","batch_check","","","","","","","","","batch_verify","beta_h","","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","check","","","","","","","","","clone","","","","","","","","","","clone_into","","","","","","","","","","clone_to_uninit","","","","","","","","","","commit","","default","","","","","deref","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","deserialize_with_mode","","","","","","","","","drop","","","","","","","","","","","","","eq","","","","","","","equivalent","","","","","","","","","","","","","","extract_prover_param","","extract_verifier_param","","f_i_eval_at_point_i","fmt","","","","","","","","","","","","from","","","","","","","","","","","","","","","","g","","","gen_srs_for_testing","","","","h","","","","h_mask","","hash","init","","","","","","","","","","","","","into","","","","","","","","","","","","","max_degree","multi_open","num_vars","","open","","powers_of_g","","","proof","proofs","prover_param","serialize_with_mode","","","","","","","","","serialized_size","","","","","","","","","to_owned","","","","","","","","","","to_string","trim","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type_id","","","","","","","","","","","","","verify","","vzip","","","","","","","","","","","","","PolyIOP","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","extract_sum","fmt","from","init","init_transcript","","","","into","prelude","prove","","","","to_owned","try_from","try_into","type_id","verify","","","","vzip","ArithmeticErrors","IOPProof","InvalidChallenge","InvalidParameters","InvalidProof","InvalidProver","InvalidVerifier","MultilinearExtension","PCSErrors","PermutationCheck","PermutationCheckSubClaim","PermutationProof","PolyIOP","PolyIOPErrors","ProductCheck","ProductCheckProof","ProductCheckSubClaim","SerializationErrors","ShouldNotArrive","SumCheck","SumCheckProof","SumCheckSubClaim","Transcript","TranscriptErrors","VPAuxInfo","VirtualPolynomial","ZeroCheck","ZeroCheckProof","ZeroCheckSubClaim","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","equivalent","","extract_sum","fmt","","","from","","","","","","init","","init_transcript","","","","into","","point","proofs","prove","","","","to_bytes","to_owned","to_string","try_from","","try_into","","type_id","","verify","","","","vzip",""],"q":[[0,"subroutines"],[3,"subroutines::pcs"],[28,"subroutines::pcs::prelude"],[376,"subroutines::poly_iop"],[412,"subroutines::poly_iop::prelude"],[497,"transcript"],[498,"subroutines::pcs::errors"],[499,"core::result"],[500,"core::borrow"],[501,"rand::rng"],[502,"core::option"],[503,"ark_serialize::error"],[504,"ark_ec::pairing"],[505,"subroutines::pcs::multilinear_kzg::srs"],[506,"core::iter::traits::iterator"],[507,"core::marker"],[508,"subroutines::pcs::multilinear_kzg"],[509,"subroutines::pcs::structs"],[510,"subroutines::pcs::univariate_kzg::srs"],[511,"ark_ec"],[512,"subroutines::pcs::univariate_kzg"],[513,"subroutines::pcs::multilinear_kzg::batching"],[514,"core::clone"],[515,"core::default"],[516,"ark_serialize"],[517,"std::io"],[518,"core::cmp"],[519,"core::fmt"],[520,"arithmetic::errors"],[521,"transcript::errors"],[522,"core::hash"],[523,"alloc::string"],[524,"core::any"],[525,"ark_ff::fields::prime"],[526,"subroutines::poly_iop::errors"],[527,"arithmetic::virtual_polynomial"],[528,"subroutines::poly_iop::structs"],[529,"subroutines::poly_iop::perm_check"],[530,"subroutines::poly_iop::prod_check"],[531,"subroutines::poly_iop::sum_check"],[532,"subroutines::poly_iop::zero_check"]],"i":"```Dd0000`00Af1`1011001011`101l``0000```````0`0``````BhBnC`CbCdCfCjClCnEn420G`;D`;:987654321<0;:9876543;:98765430;:98765430;:98765430;:9876543210765421<0;:987654321<0;:9876543;:987654321<0;:9876543087654300887766554433;6;60<<0;:987654321<<<<0;:9876543:9421;6:964;9721<0;:987654321<0;:987654362:921:6538;;:9876543;:98765430;:9876543<21;621<0;:987654321<0;:987654321<0;:98765432121<0;:9876543`Ff00000000000000000000`0000000000000Fj`00000Gb1`Gd0```Gf033`222322`Gh04Fn500000505050000455055555050324150003241`05505050324150","f":"````````````````{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}{b{i}}{b{fh}}}{{n{jl}}}{}{}{}{}}{{e{b{g}}}{{n{il}}}{}{{A`{c}}}{}{}}{{{b{{Af{}{{Ab{c}}{Ad{e}}}}}}Ah}c{}{}}{{{b{{Af{}{{Ab{c}}{Ad{e}}}}}}Ah}e{}{}}{{{b{fc}}Ah}{{n{el}}}Aj{}}{{{b{fc}}Ah}{{n{{Af{}{{Ab{e}}{Ad{g}}}}l}}}Aj{}{}}{{e{b{{d{g}}}}{b{{d{i}}}}{b{{d{k}}}}{b{fh}}}{{n{ml}}}{}{{A`{c}}}{}{}{}{}}{{e{b{g}}{b{i}}}{{n{{Al{km}}l}}}{}{{A`{c}}}{}{}{}{}}`{{e{An{Ah}}{An{Ah}}}{{n{{Al{gi}}l}}}{}{{A`{c}}}{}{}}{{{b{{Af{}{{Ab{c}}{Ad{e}}}}}}Ah}{{n{{Al{ce}}l}}}{}{}}{{{b{c}}{b{e}}{b{g}}b{b{i}}}{{n{jl}}}{}{}{}{}}```````````````````````{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Bh{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Bn{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{C`{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Cb{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Cd{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Cf{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Ch{{Bj{}{{Bf{{b{{Cj{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Cl{c}}}}}}}}Bl}}{e{{n{B`Bb}}}Bd{{Bj{}{{Bf{{b{{Cn{c}}}}}}}}Bl}}{{{b{c}}{b{{d{e}}}}{b{{d{g}}}}{b{i}}{b{fh}}}{{n{jl}}}{}{}{}{}}``{b{{b{c}}}{}}000000000000{{{b{f}}}{{b{fc}}}{}}000000000000{{{b{{Bh{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Bn{c}}}}}{{n{B`Bb}}}Bd}{{{b{{C`{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Cb{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Cd{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Cf{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Cj{c}}}}}{{n{B`Bb}}}Ch}{{{b{{Cl{c}}}}}{{n{B`Bb}}}Bd}{{{b{{Cn{c}}}}}{{n{B`Bb}}}Bd}{{{b{{D`{ce}}}}}{{D`{ce}}}{BdDb}{{Dd{c}}Db}}{{{b{{Bh{c}}}}}{{Bh{c}}}{DbBd}}{{{b{{Bn{c}}}}}{{Bn{c}}}{DbBd}}{{{b{{C`{c}}}}}{{C`{c}}}{DbBd}}{{{b{{Cb{c}}}}}{{Cb{c}}}{DbBd}}{{{b{{Cd{c}}}}}{{Cd{c}}}Bd}{{{b{{Cf{c}}}}}{{Cf{c}}}{DbBd}}{{{b{{Cj{c}}}}}{{Cj{c}}}{DbCh}}{{{b{{Cl{c}}}}}{{Cl{c}}}Bd}{{{b{{Cn{c}}}}}{{Cn{c}}}{DbBd}}{{b{b{fc}}}B`{}}000000000{{bDf}B`}000000000{{e{b{g}}}{{n{il}}}{}{{A`{c}}}{}{}}0{{}{{D`{ce}}}{BdDh}{{Dd{c}}Dh}}{{}{{Cd{c}}}Bd}{{}{{Cf{c}}}{DhBd}}{{}{{Cj{c}}}{DhCh}}{{}{{Cl{c}}}Bd}{Ah{{b{c}}}{}}000000000000{Ah{{b{fc}}}{}}000000000000{{cDjDl}{{n{{Bh{e}}Bb}}}DnBd}{{cDjDl}{{n{{Bn{e}}Bb}}}DnBd}{{cDjDl}{{n{{C`{e}}Bb}}}DnBd}{{cDjDl}{{n{{Cb{e}}Bb}}}DnBd}{{cDjDl}{{n{{Cd{e}}Bb}}}DnBd}{{cDjDl}{{n{{Cf{e}}Bb}}}DnBd}{{cDjDl}{{n{{Cj{e}}Bb}}}DnCh}{{cDjDl}{{n{{Cl{e}}Bb}}}DnBd}{{cDjDl}{{n{{Cn{e}}Bb}}}DnBd}{AhB`}000000000000{{{b{{D`{ce}}}}{b{{D`{ce}}}}}j{BdE`}{{Dd{c}}E`}}{{{b{{Cb{c}}}}{b{{Cb{c}}}}}j{E`Bd}}{{{b{{Cd{c}}}}{b{{Cd{c}}}}}jBd}{{{b{{Cf{c}}}}{b{{Cf{c}}}}}j{E`Bd}}{{{b{{Cj{c}}}}{b{{Cj{c}}}}}j{E`Ch}}{{{b{{Cl{c}}}}{b{{Cl{c}}}}}jBd}{{{b{{Cn{c}}}}{b{{Cn{c}}}}}j{E`Bd}}{{b{b{c}}}j{}}0000000000000{{{b{{Bh{c}}}}Ah}eBd{}}{{{b{{Cf{c}}}}Ah}eBd{}}{{{b{{Bh{c}}}}Ah}eBd{}}{{{b{{Cf{c}}}}Ah}eBd{}}`{{{b{l}}{b{fEb}}}Ed}0{{{b{{D`{ce}}}}{b{fEb}}}Ed{BdEf}{{Dd{c}}Ef}}{{{b{{Bh{c}}}}{b{fEb}}}Ed{EfBd}}{{{b{{Bn{c}}}}{b{fEb}}}Ed{EfBd}}{{{b{{C`{c}}}}{b{fEb}}}Ed{EfBd}}{{{b{{Cb{c}}}}{b{fEb}}}Ed{EfBd}}{{{b{{Cd{c}}}}{b{fEb}}}EdBd}{{{b{{Cf{c}}}}{b{fEb}}}Ed{EfBd}}{{{b{{Cj{c}}}}{b{fEb}}}Ed{EfCh}}{{{b{{Cl{c}}}}{b{fEb}}}EdBd}{{{b{{Cn{c}}}}{b{fEb}}}Ed{EfBd}}{cc{}}0{Ehl}{Ejl}{Bbl}33333333333```{{{b{fc}}Ah}{{n{el}}}Aj{}}0{{{b{fc}}Ah}{{n{{Bh{e}}l}}}AjBd}{{{b{fc}}Ah}{{n{{Cf{e}}l}}}AjBd}``````{{{b{{Cd{c}}}}{b{fe}}}B`BdEl}{{}Ah}000000000000{{}c{}}000000000000{{{b{{Cf{c}}}}}AhBd}{{e{b{{d{g}}}}{b{{d{i}}}}{b{{d{k}}}}{b{fh}}}{{n{{D`{m{En{m}}}}l}}}{}{{A`{c}}}{}{}{}Bd}``{{e{b{g}}{b{i}}}{{n{{Al{km}}l}}}{}{{A`{c}}}{}{}{}{}}0``````{{{b{{Bh{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Bn{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{C`{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Cb{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Cd{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Cf{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Cj{c}}}}eDj}{{n{B`Bb}}}ChF`}{{{b{{Cl{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Cn{c}}}}eDj}{{n{B`Bb}}}BdF`}{{{b{{Bh{c}}}}Dj}AhBd}{{{b{{Bn{c}}}}Dj}AhBd}{{{b{{C`{c}}}}Dj}AhBd}{{{b{{Cb{c}}}}Dj}AhBd}{{{b{{Cd{c}}}}Dj}AhBd}{{{b{{Cf{c}}}}Dj}AhBd}{{{b{{Cj{c}}}}Dj}AhCh}{{{b{{Cl{c}}}}Dj}AhBd}{{{b{{Cn{c}}}}Dj}AhBd}{bc{}}000000000{bFb}{{e{An{Ah}}{An{Ah}}}{{n{{Al{gi}}l}}}{}{{A`{c}}}{}{}}0{{{b{{Bh{c}}}}Ah}{{n{{Al{eg}}l}}}Bd{}{}}{{{b{{Cf{c}}}}Ah}{{n{{Al{eg}}l}}}Bd{}{}}{c{{n{e}}}{}{}}000000000000{{}{{n{c}}}{}}000000000000{bFd}000000000000{{{b{c}}{b{e}}{b{g}}b{b{i}}}{{n{jl}}}{}{}{}{}}0{{}c{}}000000000000`{b{{b{c}}}{}}{{{b{f}}}{{b{fc}}}{}}{{{b{{Ff{c}}}}}{{Ff{c}}}{DbFh}}{{b{b{fc}}}B`{}}{{bDf}B`}{{}{{Ff{c}}}{DhFh}}{Ah{{b{c}}}{}}{Ah{{b{fc}}}{}}{AhB`}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}j{E`Fh}}{{b{b{c}}}j{}}0{{{b{c}}}e{}Fh}{{{b{{Ff{c}}}}{b{fEb}}}Ed{EfFh}}{cc{}}{{}Ah}{{}c{}}000{{}c{}}`{{{b{c}}{b{fe}}}{{n{gFj}}}{}{}{}}{{b{b{{d{c}}}}{b{{d{c}}}}{b{fh}}}{{n{{Al{ecc}}Fj}}}{}{}}{{b{b{{d{c}}}}{b{{d{c}}}}{b{{d{c}}}}{b{fh}}}{{n{{Al{ecc}}Fj}}}{}{}}{{{b{c}}{b{fe}}}{{n{gFj}}}{}{}{}}{bc{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bFd}{{{b{c}}{b{Fl}}{b{fe}}}{{n{gFj}}}{}{}{}}{{{b{c}}{b{e}}{b{fg}}}{{n{iFj}}}{}{}{}{}}{{{b{c}}{b{e}}{b{fg}}}{{n{iFj}}}{}{}{}{}}{{c{b{e}}{b{g}}{b{fi}}}{{n{kFj}}}Fh{}{}{}{}}{{}c{}}`````````````````````````````{b{{b{c}}}{}}0{{{b{f}}}{{b{fc}}}{}}0{{{b{{Fn{c}}}}}{{Fn{c}}}{DbFh}}{{b{b{fc}}}B`{}}{{bDf}B`}{{}{{Fn{c}}}{DhFh}}{Ah{{b{c}}}{}}0{Ah{{b{fc}}}{}}0{AhB`}0{{{b{{Fn{c}}}}{b{{Fn{c}}}}}j{E`Fh}}{{b{b{c}}}j{}}0{{{b{c}}}e{}Fh}{{{b{Fj}}{b{fEb}}}Ed}0{{{b{{Fn{c}}}}{b{fEb}}}Ed{EfFh}}{cc{}}{lFj}{EhFj}{EjFj}{BbFj}4{{}Ah}0{{}c{}}000{{}c{}}0``{{b{b{{d{c}}}}{b{{d{c}}}}{b{{d{c}}}}{b{fh}}}{{n{{Al{ecc}}Fj}}}{}{}}{{b{b{{d{c}}}}{b{{d{c}}}}{b{fh}}}{{n{{Al{ecc}}Fj}}}{}{}}{{{b{c}}{b{fe}}}{{n{gFj}}}{}{}{}}{{{b{c}}{b{fe}}}{{n{gFj}}}{}{}{}}`{bc{}}{bFb}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{bFd}0{{{b{c}}{b{e}}{b{fg}}}{{n{iFj}}}{}{}{}{}}{{{b{c}}{b{Fl}}{b{fe}}}{{n{gFj}}}{}{}{}}{{c{b{e}}{b{g}}{b{fi}}}{{n{kFj}}}Fh{}{}{}{}}{{{b{c}}{b{e}}{b{fg}}}{{n{iFj}}}{}{}{}{}}{{}c{}}0","D":"ABl","p":[[1,"reference",null,null,1],[1,"slice"],[0,"mut"],[5,"IOPTranscript",497],[1,"bool"],[6,"PCSError",28,498],[6,"Result",499,null,1],[10,"Borrow",500],[17,"ProverParam"],[17,"VerifierParam"],[10,"StructuredReferenceString",3],[1,"usize"],[10,"Rng",501],[1,"tuple",null,null,1],[6,"Option",502,null,1],[1,"unit"],[6,"SerializationError",503],[10,"Pairing",504],[17,"Item"],[5,"MultilinearUniversalParams",28,505],[10,"Iterator",506],[10,"Send",507],[5,"MultilinearProverParam",28,505],[5,"MultilinearVerifierParam",28,505],[5,"MultilinearKzgProof",28,508],[5,"Commitment",28,509],[5,"UnivariateUniversalParams",28,510],[10,"AffineRepr",511],[5,"UnivariateProverParam",28,510],[5,"UnivariateVerifierParam",28,510],[5,"UnivariateKzgProof",28,512],[5,"BatchProof",28,513],[10,"Clone",514],[10,"PolynomialCommitmentScheme",3],[1,"u8"],[10,"Default",515],[6,"Compress",516],[6,"Validate",516],[10,"Read",517],[10,"PartialEq",518],[5,"Formatter",519],[8,"Result",519],[10,"Debug",519],[6,"ArithErrors",520],[6,"TranscriptError",521],[10,"Hasher",522],[5,"MultilinearKzgPCS",28,508],[10,"Write",517],[5,"String",523],[5,"TypeId",524],[5,"PolyIOP",376],[10,"PrimeField",525],[6,"PolyIOPErrors",412,526],[5,"VPAuxInfo",527],[5,"IOPProof",412,528],[5,"UnivariateKzgPCS",28],[10,"SumCheck",412],[10,"PermutationCheck",412],[10,"ProductCheck",412],[10,"ZeroCheck",412]],"r":[[28,498],[29,513],[30,509],[31,498],[32,498],[33,498],[34,498],[35,508],[36,508],[37,505],[38,505],[39,505],[40,498],[41,3],[42,498],[43,3],[44,498],[45,512],[46,512],[47,512],[48,510],[49,510],[50,510],[51,505],[52,505],[53,505],[54,508],[55,509],[56,510],[57,510],[58,510],[59,512],[60,508],[61,510],[62,510],[63,508],[65,498],[66,513],[67,505],[68,505],[69,505],[70,508],[71,509],[72,510],[73,510],[74,510],[75,512],[76,508],[78,498],[79,513],[80,505],[81,505],[82,505],[83,508],[84,509],[85,510],[86,510],[87,510],[88,512],[89,505],[90,505],[91,505],[92,508],[93,509],[94,510],[95,510],[96,510],[97,512],[98,513],[99,505],[100,505],[101,505],[102,508],[103,509],[104,510],[105,510],[106,510],[107,512],[108,513],[109,505],[110,505],[111,505],[112,508],[113,509],[114,510],[115,510],[116,510],[117,512],[118,513],[119,505],[120,505],[121,505],[122,508],[123,509],[124,510],[125,510],[126,510],[127,512],[128,508],[130,513],[131,509],[132,510],[133,510],[134,510],[135,508],[137,498],[138,513],[139,505],[140,505],[141,505],[142,508],[143,509],[144,510],[145,510],[146,510],[147,512],[148,508],[150,498],[151,513],[152,505],[153,505],[154,505],[155,508],[156,509],[157,510],[158,510],[159,510],[160,512],[161,505],[162,505],[163,505],[164,508],[165,509],[166,510],[167,510],[168,510],[169,512],[170,508],[172,498],[173,513],[174,505],[175,505],[176,505],[177,508],[178,509],[179,510],[180,510],[181,510],[182,512],[183,513],[184,508],[185,509],[186,510],[187,510],[188,510],[189,512],[190,513],[191,513],[192,508],[193,508],[194,509],[195,509],[196,510],[197,510],[198,510],[199,510],[200,510],[201,510],[202,512],[203,512],[204,505],[205,510],[206,505],[207,510],[208,513],[209,498],[210,498],[211,513],[212,505],[213,505],[214,505],[215,508],[216,509],[217,510],[218,510],[219,510],[220,512],[221,508],[223,498],[224,498],[225,498],[226,498],[227,513],[228,505],[229,505],[230,505],[231,508],[232,509],[233,510],[234,510],[235,510],[236,512],[237,505],[238,505],[239,510],[240,508],[242,505],[243,510],[244,505],[245,505],[246,510],[247,510],[248,505],[249,505],[250,509],[251,508],[253,498],[254,513],[255,505],[256,505],[257,505],[258,508],[259,509],[260,510],[261,510],[262,510],[263,512],[264,508],[266,498],[267,513],[268,505],[269,505],[270,505],[271,508],[272,509],[273,510],[274,510],[275,510],[276,512],[277,510],[278,508],[279,505],[280,505],[281,508],[283,505],[284,510],[285,510],[286,512],[287,508],[288,505],[289,505],[290,505],[291,505],[292,508],[293,509],[294,510],[295,510],[296,510],[297,512],[298,505],[299,505],[300,505],[301,508],[302,509],[303,510],[304,510],[305,510],[306,512],[307,513],[308,505],[309,505],[310,505],[311,508],[312,509],[313,510],[314,510],[315,510],[316,512],[317,498],[318,508],[320,505],[321,510],[322,508],[324,498],[325,513],[326,505],[327,505],[328,505],[329,508],[330,509],[331,510],[332,510],[333,510],[334,512],[335,508],[337,498],[338,513],[339,505],[340,505],[341,505],[342,508],[343,509],[344,510],[345,510],[346,510],[347,512],[348,508],[350,498],[351,513],[352,505],[353,505],[354,505],[355,508],[356,509],[357,510],[358,510],[359,510],[360,512],[361,508],[363,508],[365,498],[366,513],[367,505],[368,505],[369,505],[370,508],[371,509],[372,510],[373,510],[374,510],[375,512],[412,526],[413,528],[414,526],[415,526],[416,526],[417,526],[418,526],[420,526],[421,529],[424,376],[425,526],[426,530],[429,526],[430,526],[431,531],[435,526],[438,532],[441,526],[442,528],[443,526],[444,528],[445,528],[446,528],[447,528],[448,528],[449,526],[450,528],[451,526],[452,528],[453,526],[454,528],[455,528],[456,528],[457,528],[459,526],[460,526],[461,528],[462,526],[463,526],[464,526],[465,526],[466,526],[467,528],[468,526],[469,528],[474,526],[475,528],[476,528],[477,528],[482,0],[483,528],[484,526],[485,526],[486,528],[487,526],[488,528],[489,526],[490,528],[495,526],[496,528]],"b":[[209,"impl-Display-for-PCSError"],[210,"impl-Debug-for-PCSError"],[223,"impl-From%3CArithErrors%3E-for-PCSError"],[224,"impl-From%3CTranscriptError%3E-for-PCSError"],[225,"impl-From%3CSerializationError%3E-for-PCSError"],[393,"impl-SumCheck%3CF%3E-for-PolyIOP%3CF%3E"],[394,"impl-ProductCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[395,"impl-ZeroCheck%3CF%3E-for-PolyIOP%3CF%3E"],[396,"impl-PermutationCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[399,"impl-SumCheck%3CF%3E-for-PolyIOP%3CF%3E"],[400,"impl-ProductCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[401,"impl-PermutationCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[402,"impl-ZeroCheck%3CF%3E-for-PolyIOP%3CF%3E"],[407,"impl-ProductCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[408,"impl-ZeroCheck%3CF%3E-for-PolyIOP%3CF%3E"],[409,"impl-PermutationCheck%3CE,+PCS%3E-for-PolyIOP%3C%3CE+as+Pairing%3E::ScalarField%3E"],[410,"impl-SumCheck%3CF%3E-for-PolyIOP%3CF%3E"],[459,"impl-Display-for-PolyIOPErrors"],[460,"impl-Debug-for-PolyIOPErrors"],[463,"impl-From%3CPCSError%3E-for-PolyIOPErrors"],[464,"impl-From%3CArithErrors%3E-for-PolyIOPErrors"],[465,"impl-From%3CTranscriptError%3E-for-PolyIOPErrors"],[466,"impl-From%3CSerializationError%3E-for-PolyIOPErrors"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFsBHAAAAAIAHgAAACoAAAAsAAAANAAIAEAAQACDAEkA0gALAOAAAgD7AA0AIgEcAEMBJgBsAQwAegENAIkBBACPAQ0ApAEAAKcBAgCsAQEAsQECALUBAQC4ARIAzAECANABAwDVAQEA3QEBAOQBBwDwAQEA","P":[[16,"PolynomialCommitmentScheme::VerifierParam,PolynomialCommitmentScheme::Commitment,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::BatchProof"],[17,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Commitment"],[18,"StructuredReferenceString::ProverParam,StructuredReferenceString::VerifierParam"],[20,"R,PolynomialCommitmentScheme::SRS"],[21,"R,StructuredReferenceString::ProverParam,StructuredReferenceString::VerifierParam"],[22,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Evaluation,PolynomialCommitmentScheme::BatchProof"],[23,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Proof,PolynomialCommitmentScheme::Evaluation"],[25,"PolynomialCommitmentScheme::SRS,,PolynomialCommitmentScheme::ProverParam,PolynomialCommitmentScheme::VerifierParam"],[26,"StructuredReferenceString::ProverParam,StructuredReferenceString::VerifierParam"],[27,"PolynomialCommitmentScheme::VerifierParam,PolynomialCommitmentScheme::Commitment,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Proof"],[51,"E,"],[57,"C,"],[58,"E,"],[60,"PolynomialCommitmentScheme::VerifierParam,PolynomialCommitmentScheme::Commitment,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::BatchProof"],[63,"T"],[89,"E"],[95,"C"],[96,"E"],[98,"E,PCS"],[99,"E"],[105,"C"],[106,"E"],[108,"T"],[118,""],[128,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Commitment"],[130,"E,PCS"],[131,"E"],[133,"C"],[134,"E"],[135,"T"],[161,"R,E"],[167,"R,C"],[168,"R,E"],[170,""],[183,"E,PCS"],[184,"E"],[187,"C"],[188,"E"],[190,"K"],[204,"E,StructuredReferenceString::ProverParam"],[206,"E,StructuredReferenceString::VerifierParam"],[209,""],[211,"E,PCS"],[212,"E"],[218,"C"],[219,"E"],[221,"T"],[223,""],[226,"T"],[240,"R,PolynomialCommitmentScheme::SRS"],[242,"R,E"],[250,"E,__HE"],[251,""],[264,"U"],[277,"E"],[278,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Evaluation,E"],[281,"PolynomialCommitmentScheme::ProverParam,,PolynomialCommitmentScheme::Polynomial,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Proof,PolynomialCommitmentScheme::Evaluation"],[289,"E,W"],[295,"C,W"],[296,"E,W"],[298,"E"],[304,"C"],[305,"E"],[307,"T"],[317,""],[318,"PolynomialCommitmentScheme::SRS,,PolynomialCommitmentScheme::ProverParam,PolynomialCommitmentScheme::VerifierParam"],[320,"E,StructuredReferenceString::ProverParam,StructuredReferenceString::VerifierParam"],[322,"U,T"],[335,"U"],[348,""],[361,"PolynomialCommitmentScheme::VerifierParam,PolynomialCommitmentScheme::Commitment,PolynomialCommitmentScheme::Point,PolynomialCommitmentScheme::Proof"],[363,"V"],[377,"T"],[379,"F"],[380,"T"],[381,""],[382,"F"],[383,"T"],[385,""],[386,"F"],[387,"K"],[389,"SumCheck::SumCheckProof,F"],[390,"F"],[391,"T"],[392,""],[393,"SumCheck::Transcript"],[397,"U"],[399,"SumCheck::VirtualPolynomial,SumCheck::Transcript,SumCheck::SumCheckProof"],[400,"SumCheck::MultilinearExtension,ProductCheck::ProductCheckProof"],[401,"SumCheck::MultilinearExtension,PermutationCheck::PermutationProof"],[402,"SumCheck::VirtualPolynomial,SumCheck::Transcript,ZeroCheck::ZeroCheckProof"],[403,"T"],[404,"U,T"],[405,"U"],[406,""],[407,"ProductCheck::ProductCheckProof,SumCheck::Transcript,ProductCheck::ProductCheckSubClaim"],[408,"ZeroCheck::ZeroCheckProof,SumCheck::VPAuxInfo,SumCheck::Transcript,ZeroCheck::ZeroCheckSubClaim"],[409,"PermutationCheck::PermutationProof,SumCheck::VPAuxInfo,SumCheck::Transcript,PermutationCheck::PermutationCheckSubClaim"],[410,"F,SumCheck::SumCheckProof,SumCheck::VPAuxInfo,SumCheck::Transcript,SumCheck::SumCheckSubClaim"],[411,"V"],[441,"T"],[445,"F"],[446,"T"],[447,""],[448,"F"],[449,"T"],[453,""],[455,"F"],[456,"K"],[458,"SumCheck::SumCheckProof,F"],[459,""],[461,"F"],[462,"T"],[463,""],[467,"T"],[468,""],[470,"SumCheck::Transcript"],[474,"U"],[478,"SumCheck::MultilinearExtension,PermutationCheck::PermutationProof"],[479,"SumCheck::MultilinearExtension,ProductCheck::ProductCheckProof"],[480,"SumCheck::VirtualPolynomial,SumCheck::Transcript,SumCheck::SumCheckProof"],[481,"SumCheck::VirtualPolynomial,SumCheck::Transcript,ZeroCheck::ZeroCheckProof"],[483,"T"],[484,""],[485,"U,T"],[487,"U"],[489,""],[491,"PermutationCheck::PermutationProof,SumCheck::VPAuxInfo,SumCheck::Transcript,PermutationCheck::PermutationCheckSubClaim"],[492,"ProductCheck::ProductCheckProof,SumCheck::Transcript,ProductCheck::ProductCheckSubClaim"],[493,"F,SumCheck::SumCheckProof,SumCheck::VPAuxInfo,SumCheck::Transcript,SumCheck::SumCheckSubClaim"],[494,"ZeroCheck::ZeroCheckProof,SumCheck::VPAuxInfo,SumCheck::Transcript,ZeroCheck::ZeroCheckSubClaim"],[495,"V"]]}],["transcript",{"t":"FPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNN","n":["IOPTranscript","InvalidTranscript","SerializationError","TranscriptError","append_field_element","append_message","append_serializable_element","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","drop","","fmt","","from","","","get_and_append_challenge","get_and_append_challenge_vectors","init","","into","","new","to_bytes","to_owned","to_string","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"transcript"],[43,"transcript::errors"],[44,"core::result"],[45,"ark_ff::fields::prime"],[46,"ark_serialize"],[47,"core::clone"],[48,"core::fmt"],[49,"ark_serialize::error"],[50,"alloc::vec"],[51,"alloc::string"],[52,"core::any"]],"i":"`n0`d001010000101010111100010100`0110101010","f":"````{{{f{b{d{c}}}}{f{{j{h}}}}{f{c}}}{{A`{ln}}}Ab}{{{f{b{d{c}}}}{f{{j{h}}}}{f{{j{h}}}}}{{A`{ln}}}Ab}{{{f{b{d{c}}}}{f{{j{h}}}}{f{e}}}{{A`{ln}}}AbAd}{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{{d{c}}}}}{{d{c}}}{AfAb}}{{f{f{bc}}}l{}}{{fh}l}{Ah{{f{c}}}{}}0{Ah{{f{bc}}}{}}0{Ahl}0{{{f{n}}{f{bAj}}}Al}0{cc{}}{Ann}1{{{f{b{d{c}}}}{f{{j{h}}}}}{{A`{cn}}}Ab}{{{f{b{d{c}}}}{f{{j{h}}}}Ah}{{A`{{B`{c}}n}}}Ab}{{}Ah}0{{}c{}}0{{{f{{j{h}}}}}{{d{c}}}Ab}`{fc{}}{fBb}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fBd}0{{}c{}}0","D":"Af","p":[[0,"mut"],[5,"IOPTranscript",0],[1,"reference",null,null,1],[1,"u8"],[1,"slice"],[1,"unit"],[6,"TranscriptError",0,43],[6,"Result",44,null,1],[10,"PrimeField",45],[10,"CanonicalSerialize",46],[10,"Clone",47],[1,"usize"],[5,"Formatter",48],[8,"Result",48],[6,"SerializationError",49],[5,"Vec",50],[5,"String",51],[5,"TypeId",52]],"r":[[1,43],[2,43],[3,43],[7,43],[9,43],[14,43],[16,43],[18,43],[20,43],[21,43],[22,43],[23,43],[27,43],[29,43],[34,43],[35,43],[37,43],[39,43],[41,43]],"b":[[20,"impl-Display-for-TranscriptError"],[21,"impl-Debug-for-TranscriptError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACAABAAFABEAGAAAABoAAwAiAAkA","P":[[4,"F"],[6,"F,S"],[7,"T"],[11,"F"],[12,"T"],[13,""],[14,"T"],[18,""],[22,"T"],[23,""],[24,"T"],[25,"F"],[27,""],[29,"U"],[31,"F"],[33,"T"],[34,""],[35,"U,T"],[37,"U"],[39,""],[41,"V"]]}],["util",{"t":"H","n":["parallelizable_slice_iter"],"q":[[0,"util"],[1,"rayon::slice"],[2,"core::marker"]],"i":"`","f":"{{{d{{b{c}}}}}{{f{c}}}h}","D":"d","p":[[1,"slice"],[1,"reference",null,null,1],[5,"Iter",1],[10,"Sync",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[[0,"T"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8601,5751,22848,2132,294]}