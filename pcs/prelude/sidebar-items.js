initSidebarItems({"enum":[["PCSErrors","A `enum` specifying the possible failure modes of the PCS."]],"fn":[["compute_qx_degree","For an MLE w with `mle_num_vars` variables, and `point_len` number of points, compute the degree of the univariate polynomial `q(x):= w(l(x))` where l(x) is a list of polynomials that go through all points."],["get_batched_nv","Return the number of variables that one need for an MLE to batch the list of MLEs"],["merge_polynomials","merge a set of polynomials. Returns an error if the polynomials do not share a same number of nvs."]],"struct":[["BatchProof","proof of batch opening"],["Commitment","A commitment is an Affine point."],["KZGMultilinearPCS","KZG Polynomial Commitment Scheme on multilinear polynomials."],["MultilinearProverParam","Prover Parameters"],["MultilinearUniversalParams","Universal Parameter"],["MultilinearVerifierParam","Verifier Parameters"],["Proof","proof of opening"],["UnivariateProverParam","Prover Parameters"],["UnivariateUniversalParams","`UniversalParams` are the universal parameters for the KZG10 scheme. Adapted from https://github.com/arkworks-rs/poly-commit/blob/master/src/kzg10/data_structures.rs#L20"],["UnivariateVerifierParam","`VerifierKey` is used to check evaluation proofs for a given commitment. https://github.com/arkworks-rs/poly-commit/blob/master/src/kzg10/data_structures.rs#L236"]]});