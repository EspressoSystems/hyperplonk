searchState.loadedDescShard("arithmetic", 0, "A <code>enum</code> specifying the possible failure modes of the …\nStores a multilinear polynomial in dense evaluation form.\nInvalid parameters: {0}\nAn error during (de)serialization: {0}\nShould not arrive to this point\nAuxiliary information about the multilinear polynomial\nA virtual polynomial is a sum of products of multilinear …\nAdd a product of list of multilinear extensions to self …\nAux information about the multilinear polynomial\nDecompose an integer into a binary vector in little endian.\nThis function build the eq(x, r) polynomial for any given …\nThis function build the eq(x, r) polynomial for any given …\nGiven a list of points, build <code>l(points)</code> which is a list of …\nEvaluate eq polynomial.\nEvaluate the virtual polynomial at point <code>point</code>. Returns an …\nThe evaluation over {0,1}^<code>num_vars</code>\nStores multilinear extensions in which product …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a new polynomial from a list of evaluations …\nConstruct a new polynomial from a list of evaluations …\ngiven the evaluation input <code>point</code> of the <code>index</code>-th …\nReturn the number of variables that one need for an MLE to …\nget the domain for the univariate polynomial\nA list of MLEs that represents an identity permutation\nReturns the evaluation of the polynomial at a point …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator that iterates over the evaluations …\nReturns a mutable iterator that iterates over the …\nmax number of multiplicands in each product\nmerge a set of polynomials. Returns an error if the …\nMultiple the current VirtualPolynomial by an MLE:\nCreates an empty virtual polynomial with <code>num_variables</code>.\nCreates an new virtual polynomial from a MLE and its …\nnumber of variables of the polynomial\nNumber of variables\nPrint out the evaluation map for testing. Panic if the …\nlist of reference to products (as usize) of multilinear …\nSample a random virtual polynomial, return the polynomial …\nSample a random virtual polynomial that evaluates to zero …\nSample a random list of multilinear polynomials. Returns\nA list of MLEs that represent a random permutation\nRelabel the point in place by switching <code>k</code> scalars from …")