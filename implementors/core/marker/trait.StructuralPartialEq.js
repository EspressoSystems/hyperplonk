(function() {var implementors = {};
implementors["arithmetic"] = [{"text":"impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"arithmetic/struct.VirtualPolynomial.html\" title=\"struct arithmetic::VirtualPolynomial\">VirtualPolynomial</a>&lt;F&gt;","synthetic":false,"types":["arithmetic::virtual_polynomial::VirtualPolynomial"]},{"text":"impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"arithmetic/struct.VPAuxInfo.html\" title=\"struct arithmetic::VPAuxInfo\">VPAuxInfo</a>&lt;F&gt;","synthetic":false,"types":["arithmetic::virtual_polynomial::VPAuxInfo"]}];
implementors["hyperplonk"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"hyperplonk/prelude/struct.CustomizedGates.html\" title=\"struct hyperplonk::prelude::CustomizedGates\">CustomizedGates</a>","synthetic":false,"types":["hyperplonk::custom_gate::CustomizedGates"]},{"text":"impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"hyperplonk/prelude/struct.SelectorColumn.html\" title=\"struct hyperplonk::prelude::SelectorColumn\">SelectorColumn</a>&lt;F&gt;","synthetic":false,"types":["hyperplonk::selectors::SelectorColumn"]}];
implementors["pcs"] = [{"text":"impl&lt;E:&nbsp;PairingEngine&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pcs/prelude/struct.MultilinearKzgProof.html\" title=\"struct pcs::prelude::MultilinearKzgProof\">MultilinearKzgProof</a>&lt;E&gt;","synthetic":false,"types":["pcs::multilinear_kzg::MultilinearKzgProof"]},{"text":"impl&lt;E:&nbsp;PairingEngine&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pcs/prelude/struct.MultilinearKzgBatchProof.html\" title=\"struct pcs::prelude::MultilinearKzgBatchProof\">MultilinearKzgBatchProof</a>&lt;E&gt;","synthetic":false,"types":["pcs::multilinear_kzg::MultilinearKzgBatchProof"]},{"text":"impl&lt;E:&nbsp;PairingEngine&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pcs/prelude/struct.UnivariateUniversalParams.html\" title=\"struct pcs::prelude::UnivariateUniversalParams\">UnivariateUniversalParams</a>&lt;E&gt;","synthetic":false,"types":["pcs::univariate_kzg::srs::UnivariateUniversalParams"]},{"text":"impl&lt;C:&nbsp;AffineCurve&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pcs/prelude/struct.UnivariateProverParam.html\" title=\"struct pcs::prelude::UnivariateProverParam\">UnivariateProverParam</a>&lt;C&gt;","synthetic":false,"types":["pcs::univariate_kzg::srs::UnivariateProverParam"]},{"text":"impl&lt;E:&nbsp;PairingEngine&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"pcs/prelude/struct.UnivariateKzgProof.html\" title=\"struct pcs::prelude::UnivariateKzgProof\">UnivariateKzgProof</a>&lt;E&gt;","synthetic":false,"types":["pcs::univariate_kzg::UnivariateKzgProof"]}];
implementors["poly_iop"] = [{"text":"impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"poly_iop/struct.PolyIOP.html\" title=\"struct poly_iop::PolyIOP\">PolyIOP</a>&lt;F&gt;","synthetic":false,"types":["poly_iop::PolyIOP"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()