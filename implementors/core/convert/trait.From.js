(function() {var implementors = {
"arithmetic":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SerializationError&gt; for <a class=\"enum\" href=\"arithmetic/enum.ArithErrors.html\" title=\"enum arithmetic::ArithErrors\">ArithErrors</a>"]],
"hyperplonk":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SerializationError&gt; for <a class=\"enum\" href=\"hyperplonk/prelude/enum.HyperPlonkErrors.html\" title=\"enum hyperplonk::prelude::HyperPlonkErrors\">HyperPlonkErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"subroutines/poly_iop/errors/enum.PolyIOPErrors.html\" title=\"enum subroutines::poly_iop::errors::PolyIOPErrors\">PolyIOPErrors</a>&gt; for <a class=\"enum\" href=\"hyperplonk/prelude/enum.HyperPlonkErrors.html\" title=\"enum hyperplonk::prelude::HyperPlonkErrors\">HyperPlonkErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"subroutines/pcs/errors/enum.PCSError.html\" title=\"enum subroutines::pcs::errors::PCSError\">PCSError</a>&gt; for <a class=\"enum\" href=\"hyperplonk/prelude/enum.HyperPlonkErrors.html\" title=\"enum hyperplonk::prelude::HyperPlonkErrors\">HyperPlonkErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"transcript/errors/enum.TranscriptError.html\" title=\"enum transcript::errors::TranscriptError\">TranscriptError</a>&gt; for <a class=\"enum\" href=\"hyperplonk/prelude/enum.HyperPlonkErrors.html\" title=\"enum hyperplonk::prelude::HyperPlonkErrors\">HyperPlonkErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ArithErrors&gt; for <a class=\"enum\" href=\"hyperplonk/prelude/enum.HyperPlonkErrors.html\" title=\"enum hyperplonk::prelude::HyperPlonkErrors\">HyperPlonkErrors</a>"],["impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"hyperplonk/prelude/struct.SelectorColumn.html\" title=\"struct hyperplonk::prelude::SelectorColumn\">SelectorColumn</a>&lt;F&gt;&gt; for DenseMultilinearExtension&lt;F&gt;"],["impl&lt;F:&nbsp;PrimeField&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"hyperplonk/prelude/struct.WitnessColumn.html\" title=\"struct hyperplonk::prelude::WitnessColumn\">WitnessColumn</a>&lt;F&gt;&gt; for DenseMultilinearExtension&lt;F&gt;"]],
"subroutines":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SerializationError&gt; for <a class=\"enum\" href=\"subroutines/pcs/prelude/enum.PCSError.html\" title=\"enum subroutines::pcs::prelude::PCSError\">PCSError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"transcript/errors/enum.TranscriptError.html\" title=\"enum transcript::errors::TranscriptError\">TranscriptError</a>&gt; for <a class=\"enum\" href=\"subroutines/pcs/prelude/enum.PCSError.html\" title=\"enum subroutines::pcs::prelude::PCSError\">PCSError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ArithErrors&gt; for <a class=\"enum\" href=\"subroutines/pcs/prelude/enum.PCSError.html\" title=\"enum subroutines::pcs::prelude::PCSError\">PCSError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SerializationError&gt; for <a class=\"enum\" href=\"subroutines/poly_iop/prelude/enum.PolyIOPErrors.html\" title=\"enum subroutines::poly_iop::prelude::PolyIOPErrors\">PolyIOPErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"transcript/errors/enum.TranscriptError.html\" title=\"enum transcript::errors::TranscriptError\">TranscriptError</a>&gt; for <a class=\"enum\" href=\"subroutines/poly_iop/prelude/enum.PolyIOPErrors.html\" title=\"enum subroutines::poly_iop::prelude::PolyIOPErrors\">PolyIOPErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ArithErrors&gt; for <a class=\"enum\" href=\"subroutines/poly_iop/prelude/enum.PolyIOPErrors.html\" title=\"enum subroutines::poly_iop::prelude::PolyIOPErrors\">PolyIOPErrors</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"subroutines/pcs/prelude/enum.PCSError.html\" title=\"enum subroutines::pcs::prelude::PCSError\">PCSError</a>&gt; for <a class=\"enum\" href=\"subroutines/poly_iop/prelude/enum.PolyIOPErrors.html\" title=\"enum subroutines::poly_iop::prelude::PolyIOPErrors\">PolyIOPErrors</a>"]],
"transcript":[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.67.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SerializationError&gt; for <a class=\"enum\" href=\"transcript/enum.TranscriptError.html\" title=\"enum transcript::TranscriptError\">TranscriptError</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()